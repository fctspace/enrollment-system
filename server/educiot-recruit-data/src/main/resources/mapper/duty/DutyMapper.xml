<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.educiot.recruit.data.mapper.duty.DutyMapper">
<sql  id="dutyPlanSql" >
 <![CDATA[
 SELECT
    `e_r_preach_plan`.`preach_plan_id` AS `id`,
   DATE( e_r_preach_plan.`preach_time`) AS `duty_date`,
    `e_r_preach_plan`.`preach_time` AS `start_time`,
    `e_r_preach_plan`.`end_time` AS `end_time`,
    `e_r_preach_plan`.`speaker_id` AS `user_id`,
    `e_r_preach_plan`.`speaker_name` AS `user_name` ,
    2 AS `type`
    FROM
    `e_r_preach_plan`
      WHERE (`e_r_preach_plan`.`status` = 2) and `e_r_preach_plan`.semester_id =#{semesterId}
    UNION
    SELECT
    p.`preach_plan_id` AS `id`,
     DATE(p.`preach_time`) AS `duty_date`,
    p.`preach_time` AS `start_time`,
    p.`end_time` AS `end_time`,
    ar.`charger_id` AS `user_id`,
    ar.`charger_name` AS `user_name` ,
    3 AS `type`
    FROM
    `e_r_preach_plan` p right JOIN e_r_preach_assistant_relation ar
    ON p.preach_plan_id = ar.preach_plan_id
    WHERE (p.`status` = 2) and  p.semester_id =#{semesterId}

union
    SELECT consultation_id AS id,DATE duty_date,CONCAT(DATE,' ','00:00:00')AS start_time,CONCAT(DATE,' ','23:59:59')AS end_time, daily_receptionist_id user_id,daily_receptionist_name user_name, '1' AS TYPE FROM (
    (SELECT DATE FROM (
    SELECT DATE_FORMAT(DATE_ADD((SELECT DATE_SUB(start_time,INTERVAL 1 DAY) FROM e_r_consultation WHERE semester_id =#{semesterId}), INTERVAL xc DAY), '%Y-%m-%d') AS DATE
    FROM (
    SELECT @xi:=@xi+1 AS xc FROM
    (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) xc1,
    (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) xc2,
    (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) xc3,
    (SELECT @xi:=0) xc0
    ) xcxc ) f
    WHERE f.date <= DATE_FORMAT((SELECT end_time FROM e_r_consultation WHERE semester_id =#{semesterId}),'%Y-%m-%d')
    AND f.date NOT IN (SELECT DATE_FORMAT(openday_date,'%Y-%m-%d') AS DATE FROM e_r_openday WHERE consultation_id IN (SELECT consultation_id FROM  e_r_consultation WHERE semester_id =#{semesterId}))
    ) a ,

    (SELECT consultation_id,semester,daily_receptionist_id,daily_receptionist_name,telephone,SCHEDULE,address
    FROM e_r_consultation WHERE semester_id =#{semesterId}) b
    )
    UNION
    SELECT  consultation_id,  openday_date duty_date, CONCAT(openday_date,' ','00:00:00')AS start_time,CONCAT(openday_date,' ','23:59:59')AS end_time,receptionist_id,receptionist_name, '1' AS TYPE
    FROM e_r_openday WHERE consultation_id IN (SELECT consultation_id FROM  e_r_consultation WHERE semester_id =#{semesterId}) and is_openday=0

    UNION
    SELECT  consultation_id,  openday_date duty_date, CONCAT(openday_date,' ','00:00:00')AS start_time,CONCAT(openday_date,' ','23:59:59')AS end_time,receptionist_id,receptionist_name, '0' AS TYPE
    FROM e_r_openday WHERE consultation_id IN (SELECT consultation_id FROM  e_r_consultation WHERE semester_id =#{semesterId}) and is_openday=1


    ]]>
</sql>

    <!--分页查询计划列表信息-->
    <select id="listPageCount" resultType="Long" parameterType="com.educiot.recruit.data.entity.query.duty.DutyPageQuery">
       select count(1) from(<include refid="listPageSql"/>) TOTAL
    </select>
    <sql id="listPageSql"> <![CDATA[    SELECT * FROM (
        SELECT *, COUNT(a.id) amount, IF(COUNT(a.id) >1,true,false) conflict FROM (
        SELECT  t.*
        FROM ( ]]>
        <include refid="dutyPlanSql"/>
        <![CDATA[) t
        LEFT JOIN ( ]]>
        <include refid="dutyPlanSql"/>
        <![CDATA[
        )b
        ON (
        t.user_id = b.user_id
        )where  (t.start_time < b.end_time or t.start_time= b.start_time)
        AND (t.end_time > b.start_time or t.end_time = b.end_time)
        ) a GROUP BY a.id, a.type,a.duty_date,a.start_time,a.end_time,a.user_id,a.user_name
        )f]]>
        <where>
            <if test='param.startTime!=null'>
                and (UNIX_TIMESTAMP(f.start_time) <![CDATA[>=]]> UNIX_TIMESTAMP(#{param.startTime}))
            </if>
            <if test='param.endTime!=null'>
                and (UNIX_TIMESTAMP(f.end_time) <![CDATA[<=]]> UNIX_TIMESTAMP(#{param.endTime}) )
            </if>
            <if test='param.userName!=null and param.userName!=""'>
                and f.user_name like CONCAT('%',#{param.userName},'%')
            </if>
        </where>
        ORDER BY f.user_name DESC,f.start_time DESC,f.end_time DESC,f.type
    </sql>
    <!--分页查询计划列表信息-->
    <select id="listPage" resultType="com.educiot.recruit.data.entity.vo.DutyVO" parameterType="com.educiot.recruit.data.entity.query.duty.DutyPageQuery">
       <include refid="listPageSql"></include>
    </select>


    <!--分页查询计划列表信息-->
    <select id="pageConflictCount" resultType="Long" >
        select count(1) from(<include refid="pageConflictSql"/>) TOTAL
    </select>
    <!--分页查询计划列表信息-->
    <select id="pageConflict" resultType="com.educiot.recruit.data.entity.vo.DutyVO" parameterType="com.educiot.recruit.data.entity.query.duty.DutyPageQuery">
        <include refid="pageConflictSql"></include>
    </select>

    <sql id="pageConflictSql" >
        <![CDATA[    SELECT * FROM (
        SELECT *, COUNT(a.id) amount, IF(COUNT(a.id) >1,true,false) conflict FROM (
        SELECT  t.*
        FROM ( ]]>
        <include refid="dutyPlanSql"/>
        <![CDATA[) t
        LEFT JOIN ( ]]>
        <include refid="dutyPlanSql"/>
        <![CDATA[
        )b
        ON (
        t.user_id = b.user_id
        )where  (t.start_time < b.end_time or t.start_time= b.start_time)
        AND (t.end_time > b.start_time or t.end_time = b.end_time)
        ) a GROUP BY  a.id, a.type,a.duty_date,a.start_time,a.end_time,a.user_id,a.user_name
        )f]]>
        <where>
            conflict = 1
         <if test='param.startTime!=null'>
             and (UNIX_TIMESTAMP(f.start_time) <![CDATA[>=]]> UNIX_TIMESTAMP(#{param.startTime}))
         </if>
    <if test='param.endTime!=null'>
        and (UNIX_TIMESTAMP(f.end_time) <![CDATA[<=]]> UNIX_TIMESTAMP(#{param.endTime}) )
    </if>
    <if test='param.userName!=null and param.userName!=""'>
        and f.user_name like CONCAT('%',#{param.userName},'%')
    </if>
        </where>
        ORDER BY f.user_name DESC,f.start_time DESC,f.end_time DESC,f.type
    </sql>
</mapper>